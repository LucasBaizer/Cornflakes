package game.server
public class UDPCallback implements org.jnetwork.UDPConnectionCallback

use org.jnetwork.{UDPConnection, ClientData}
use java.util.Random;

private static const random: Random = Random()

public override func dataReceived(clientData: ClientData, data: i8[]) {
	const connection = clientData.connection
	const client = connection as UDPConnection
	
	if data.length < 2 {
		writeResponse(client, constructResponse(Codes.INVALID_DATA_LENGTH, array(i8, 0)))
	} else {	
		const amount = data[0]
		const op = data[1]
		
		if op == Codes.REGISTER_USER {
			const id = random.nextInt
			const usernameLength = data[2]
			
			var username = ""
			foreach i in range!(0, usernameLength) {
				const ch: char = data[3 + i]
				username = username + ch
			}
			
			Database.registerUser(id, username)
			
			writeResponse(client, constructResponse(Codes.SUCCESS, array(i8, 0)))
		} else {
			writeResponse(client, constructResponse(Codes.INVALID_OPCODE, array(i8, 0)))
		}
	}
}

private func constructResponse(code: i32, data: i8[]) -> i8[] {
	const len = data.length
	const arr = array(i8, len + 2)
	
	arr[0] = arr.length
	arr[1] = code
	
	System.arraycopy(data, 0, arr, 2, len)
	
	return arr
}

private func writeResponse(client: UDPConnection, data: i8[]) {
	client.write(data)
}